[2024-01-02 10:23:52,468] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@60215eee, name=log4j:logger=kafka.controller (kafka.controller)
[2024-01-02 10:24:16,227] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-01-02 10:24:16,267] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2024-01-02 10:24:16,267] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-01-02 10:24:16,276] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-01-02 10:24:16,284] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-01-02 10:24:16,291] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-01-02 10:24:16,335] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 24) (kafka.controller.KafkaController)
[2024-01-02 10:24:16,338] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-01-02 10:24:16,345] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-01-02 10:24:16,361] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-01-02 10:24:16,363] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-01-02 10:24:16,363] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-01-02 10:24:16,363] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2024-01-02 10:24:16,364] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-01-02 10:24:16,366] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-01-02 10:24:16,366] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-01-02 10:24:16,367] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-01-02 10:24:16,367] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2024-01-02 10:24:16,367] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-01-02 10:24:16,377] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:24:16,378] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:24:16,384] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:24:16,384] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:24:16,386] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-01-02 10:24:16,387] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-01-02 10:24:16,389] INFO [RequestSendThread controllerId=0] Controller 0 connected to DESKTOP-E8METKB.:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-01-02 10:24:16,391] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2024-01-02 10:24:16,391] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2024-01-02 10:24:16,408] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-01-02 10:24:16,408] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-01-02 10:24:16,409] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-01-02 10:24:16,410] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-01-02 10:24:16,411] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-01-02 10:24:16,428] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-01-02 10:24:21,430] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-01-02 10:24:21,431] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-01-02 10:24:21,433] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2024-01-02 10:24:35,199] INFO [Controller id=0] New topics: [Set(test)], deleted topics: [Set()], new partition replica assignment [Map(test-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2024-01-02 10:24:35,199] INFO [Controller id=0] New partition creation callback for test-0 (kafka.controller.KafkaController)
[2024-01-02 10:25:25,195] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2024-01-02 10:25:25,198] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2024-01-02 10:26:01,044] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2024-01-02 10:26:01,044] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2024-01-02 10:26:01,044] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2024-01-02 10:26:01,047] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),test-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2024-01-02 10:26:01,949] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-01-02 10:26:01,950] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-01-02 10:26:01,950] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-01-02 10:26:01,951] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2024-01-02 10:26:01,952] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-01-02 10:26:01,954] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-01-02 10:26:01,955] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:26:01,955] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2024-01-02 10:26:01,956] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2024-01-02 10:26:01,956] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2024-01-02 10:26:01,959] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2024-01-02 10:27:27,449] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@60215eee, name=log4j:logger=kafka.controller (kafka.controller)
[2024-01-02 10:27:47,353] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-01-02 10:27:47,396] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2024-01-02 10:27:47,397] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-01-02 10:27:47,402] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-01-02 10:27:47,408] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-01-02 10:27:47,412] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-01-02 10:27:47,452] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 24) (kafka.controller.KafkaController)
[2024-01-02 10:27:47,457] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-01-02 10:27:47,463] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-01-02 10:27:47,473] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-01-02 10:27:47,475] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-01-02 10:27:47,476] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-01-02 10:27:47,477] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2024-01-02 10:27:47,478] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-01-02 10:27:47,481] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-01-02 10:27:47,481] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-01-02 10:27:47,482] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-01-02 10:27:47,482] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2024-01-02 10:27:47,482] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-01-02 10:27:47,490] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:27:47,491] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:27:47,503] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:27:47,503] INFO [RequestSendThread controllerId=0] Controller 0 connected to DESKTOP-E8METKB.:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-01-02 10:27:47,504] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:27:47,505] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-01-02 10:27:47,506] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-01-02 10:27:47,520] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2024-01-02 10:27:47,520] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2024-01-02 10:27:47,528] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-01-02 10:27:47,528] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-01-02 10:27:47,530] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-01-02 10:27:47,532] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-01-02 10:27:47,535] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-01-02 10:27:47,608] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-01-02 10:27:52,611] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-01-02 10:27:52,611] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-01-02 10:27:52,612] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2024-01-02 10:28:00,071] INFO [Controller id=0] New topics: [Set(test)], deleted topics: [Set()], new partition replica assignment [Map(test-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2024-01-02 10:28:00,072] INFO [Controller id=0] New partition creation callback for test-0 (kafka.controller.KafkaController)
[2024-01-02 10:28:18,656] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2024-01-02 10:28:18,658] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2024-01-02 10:28:52,183] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2024-01-02 10:28:52,183] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2024-01-02 10:28:52,183] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2024-01-02 10:28:52,186] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),test-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2024-01-02 10:28:53,424] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-01-02 10:28:53,426] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-01-02 10:28:53,426] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-01-02 10:28:53,428] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2024-01-02 10:28:53,429] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-01-02 10:28:53,430] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-01-02 10:28:53,431] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:28:53,432] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2024-01-02 10:28:53,432] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2024-01-02 10:28:53,432] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2024-01-02 10:28:53,436] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2024-01-02 10:29:25,701] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@60215eee, name=log4j:logger=kafka.controller (kafka.controller)
[2024-01-02 10:29:35,803] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-01-02 10:29:35,853] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2024-01-02 10:29:35,853] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-01-02 10:29:35,862] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-01-02 10:29:35,870] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-01-02 10:29:35,874] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-01-02 10:29:35,917] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 24) (kafka.controller.KafkaController)
[2024-01-02 10:29:35,921] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-01-02 10:29:35,927] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-01-02 10:29:35,939] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-01-02 10:29:35,940] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-01-02 10:29:35,940] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-01-02 10:29:35,941] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2024-01-02 10:29:35,942] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-01-02 10:29:35,945] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-01-02 10:29:35,945] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-01-02 10:29:35,946] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-01-02 10:29:35,947] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2024-01-02 10:29:35,947] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-01-02 10:29:35,957] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:29:35,958] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:29:35,965] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:29:35,966] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:29:35,967] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-01-02 10:29:35,968] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-01-02 10:29:35,968] INFO [RequestSendThread controllerId=0] Controller 0 connected to DESKTOP-E8METKB.:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-01-02 10:29:35,978] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2024-01-02 10:29:35,978] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2024-01-02 10:29:35,987] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-01-02 10:29:35,988] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-01-02 10:29:35,991] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-01-02 10:29:35,993] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-01-02 10:29:35,998] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-01-02 10:29:36,029] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-01-02 10:29:41,031] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-01-02 10:29:41,031] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-01-02 10:29:41,043] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2024-01-02 10:32:25,944] INFO [Controller id=0] New topics: [Set(your_topic)], deleted topics: [Set()], new partition replica assignment [Map(your_topic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2024-01-02 10:32:25,944] INFO [Controller id=0] New partition creation callback for your_topic-0 (kafka.controller.KafkaController)
[2024-01-02 10:33:21,716] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2024-01-02 10:33:21,717] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2024-01-02 10:33:21,717] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2024-01-02 10:33:21,720] TRACE [Controller id=0] All leaders = your_topic-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2024-01-02 10:33:22,853] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-01-02 10:33:22,854] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-01-02 10:33:22,854] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-01-02 10:33:22,855] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2024-01-02 10:33:22,855] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-01-02 10:33:22,857] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-01-02 10:33:22,858] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:33:22,858] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2024-01-02 10:33:22,858] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2024-01-02 10:33:22,858] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2024-01-02 10:33:22,861] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2024-01-02 10:34:02,073] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@60215eee, name=log4j:logger=kafka.controller (kafka.controller)
[2024-01-02 10:34:12,902] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-01-02 10:34:12,948] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2024-01-02 10:34:12,948] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-01-02 10:34:12,959] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-01-02 10:34:12,966] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-01-02 10:34:12,972] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-01-02 10:34:13,016] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 24) (kafka.controller.KafkaController)
[2024-01-02 10:34:13,021] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-01-02 10:34:13,030] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-01-02 10:34:13,046] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-01-02 10:34:13,047] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-01-02 10:34:13,048] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-01-02 10:34:13,049] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2024-01-02 10:34:13,050] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-01-02 10:34:13,053] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-01-02 10:34:13,053] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-01-02 10:34:13,053] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-01-02 10:34:13,054] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2024-01-02 10:34:13,054] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-01-02 10:34:13,064] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:34:13,065] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:34:13,068] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:34:13,069] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:34:13,069] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-01-02 10:34:13,071] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-01-02 10:34:13,072] INFO [RequestSendThread controllerId=0] Controller 0 connected to DESKTOP-E8METKB.:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-01-02 10:34:13,076] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2024-01-02 10:34:13,077] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2024-01-02 10:34:13,096] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-01-02 10:34:13,097] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-01-02 10:34:13,098] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-01-02 10:34:13,099] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-01-02 10:34:13,101] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-01-02 10:34:13,123] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-01-02 10:34:18,126] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-01-02 10:34:18,127] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-01-02 10:34:18,130] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2024-01-02 10:34:19,369] INFO [Controller id=0] New topics: [Set(your_topic)], deleted topics: [Set()], new partition replica assignment [Map(your_topic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2024-01-02 10:34:19,370] INFO [Controller id=0] New partition creation callback for your_topic-0 (kafka.controller.KafkaController)
[2024-01-02 10:34:50,054] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2024-01-02 10:34:50,057] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2024-01-02 10:35:24,605] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2024-01-02 10:35:24,606] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2024-01-02 10:35:24,606] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2024-01-02 10:35:24,609] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),your_topic-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2024-01-02 10:35:25,762] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-01-02 10:35:25,763] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-01-02 10:35:25,763] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-01-02 10:35:25,764] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2024-01-02 10:35:25,765] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-01-02 10:35:25,767] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-01-02 10:35:25,767] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:35:25,768] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2024-01-02 10:35:25,768] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2024-01-02 10:35:25,768] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2024-01-02 10:35:25,771] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2024-01-02 10:35:54,247] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@60215eee, name=log4j:logger=kafka.controller (kafka.controller)
[2024-01-02 10:36:02,077] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-01-02 10:36:02,120] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2024-01-02 10:36:02,120] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-01-02 10:36:02,126] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-01-02 10:36:02,133] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-01-02 10:36:02,138] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-01-02 10:36:02,194] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 24) (kafka.controller.KafkaController)
[2024-01-02 10:36:02,199] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-01-02 10:36:02,205] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-01-02 10:36:02,220] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-01-02 10:36:02,222] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-01-02 10:36:02,222] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-01-02 10:36:02,222] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2024-01-02 10:36:02,223] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-01-02 10:36:02,226] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-01-02 10:36:02,227] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-01-02 10:36:02,227] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-01-02 10:36:02,227] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2024-01-02 10:36:02,228] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-01-02 10:36:02,235] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:36:02,237] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:36:02,252] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:36:02,253] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:36:02,255] INFO [RequestSendThread controllerId=0] Controller 0 connected to DESKTOP-E8METKB.:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-01-02 10:36:02,255] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-01-02 10:36:02,258] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-01-02 10:36:02,263] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2024-01-02 10:36:02,263] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2024-01-02 10:36:02,288] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-01-02 10:36:02,288] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-01-02 10:36:02,289] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-01-02 10:36:02,290] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-01-02 10:36:02,293] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-01-02 10:36:02,320] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-01-02 10:36:07,321] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-01-02 10:36:07,322] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-01-02 10:36:07,333] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2024-01-02 10:36:10,668] INFO [Controller id=0] New topics: [Set(test)], deleted topics: [Set()], new partition replica assignment [Map(test-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2024-01-02 10:36:10,669] INFO [Controller id=0] New partition creation callback for test-0 (kafka.controller.KafkaController)
[2024-01-02 10:36:54,035] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2024-01-02 10:36:54,038] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2024-01-02 10:39:34,414] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2024-01-02 10:39:34,415] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2024-01-02 10:39:34,415] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2024-01-02 10:39:34,418] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),test-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2024-01-02 10:39:35,702] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-01-02 10:39:35,703] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-01-02 10:39:35,703] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-01-02 10:39:35,704] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2024-01-02 10:39:35,705] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-01-02 10:39:35,710] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-01-02 10:39:35,712] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:39:35,712] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2024-01-02 10:39:35,713] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2024-01-02 10:39:35,712] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2024-01-02 10:39:35,716] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2024-01-02 10:51:39,887] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@60215eee, name=log4j:logger=kafka.controller (kafka.controller)
[2024-01-02 10:51:53,633] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-01-02 10:51:53,682] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2024-01-02 10:51:53,683] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-01-02 10:51:53,692] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-01-02 10:51:53,700] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-01-02 10:51:53,705] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-01-02 10:51:53,752] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 24) (kafka.controller.KafkaController)
[2024-01-02 10:51:53,759] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-01-02 10:51:53,767] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-01-02 10:51:53,787] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-01-02 10:51:53,789] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-01-02 10:51:53,790] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-01-02 10:51:53,790] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2024-01-02 10:51:53,791] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-01-02 10:51:53,796] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-01-02 10:51:53,797] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-01-02 10:51:53,797] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-01-02 10:51:53,798] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2024-01-02 10:51:53,798] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-01-02 10:51:53,806] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:51:53,807] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:51:53,815] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:51:53,816] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:51:53,817] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-01-02 10:51:53,818] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-01-02 10:51:53,824] INFO [RequestSendThread controllerId=0] Controller 0 connected to DESKTOP-E8METKB.:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-01-02 10:51:53,824] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2024-01-02 10:51:53,825] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2024-01-02 10:51:53,843] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-01-02 10:51:53,844] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-01-02 10:51:53,844] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-01-02 10:51:53,845] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-01-02 10:51:53,846] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-01-02 10:51:53,874] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-01-02 10:51:58,875] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-01-02 10:51:58,876] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-01-02 10:51:58,887] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2024-01-02 10:52:02,549] INFO [Controller id=0] New topics: [Set(test)], deleted topics: [Set()], new partition replica assignment [Map(test-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2024-01-02 10:52:02,549] INFO [Controller id=0] New partition creation callback for test-0 (kafka.controller.KafkaController)
[2024-01-02 10:53:43,479] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2024-01-02 10:53:43,482] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2024-01-02 10:59:11,309] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@60215eee, name=log4j:logger=kafka.controller (kafka.controller)
[2024-01-02 10:59:52,455] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-01-02 10:59:52,503] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2024-01-02 10:59:52,504] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-01-02 10:59:52,513] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-01-02 10:59:52,522] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-01-02 10:59:52,532] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-01-02 10:59:52,602] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 24) (kafka.controller.KafkaController)
[2024-01-02 10:59:52,607] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-01-02 10:59:52,617] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-01-02 10:59:52,639] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-01-02 10:59:52,642] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-01-02 10:59:52,643] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-01-02 10:59:52,643] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2024-01-02 10:59:52,644] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-01-02 10:59:52,648] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-01-02 10:59:52,648] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-01-02 10:59:52,649] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-01-02 10:59:52,651] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2024-01-02 10:59:52,652] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-01-02 10:59:52,662] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:59:52,663] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:59:52,678] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:59:52,679] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2024-01-02 10:59:52,680] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-01-02 10:59:52,681] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-01-02 10:59:52,684] INFO [RequestSendThread controllerId=0] Controller 0 connected to DESKTOP-E8METKB.:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-01-02 10:59:52,687] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2024-01-02 10:59:52,688] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2024-01-02 10:59:52,702] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-01-02 10:59:52,714] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-01-02 10:59:52,717] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-01-02 10:59:52,717] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-01-02 10:59:52,720] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-01-02 10:59:52,745] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-01-02 10:59:57,746] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-01-02 10:59:57,747] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-01-02 10:59:57,748] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
